Main.commandNotFound = Command not found. see:\n\
\n\
\tmend --help

Clean.noDecDir = You need to set the %s property before you can clean the files in it.
Clean.cleanComplete = Cleaning complete
Clean.usage = Usage:\tmend %s\n\
\n\
Runs the shred command on every file in your decrypt directory.
Clean.description = Runs the %s on every file in your decrypt directory.

Shred.noShredCommand = You need to set the %s property in your settings before you can shred files.
Shred.fileName = <filename>
Shred.cleaning = Cleaning: %s

Lock.notUnlocked = MEND did not appear to be unlocked.
Lock.lockFailed = Locking may have failed, your private key file still exists.
Lock.locked = MEND Locked.
Lock.usage = Usage:\tmend %s\n\
\n\
Locks MEND by running the shred command on your private and public key files.
Lock.description = Shreds the decrypted private key. Requires shred to be installed.

Encrypt.malformedCommand = Malformed command. See "mend %s -h" for more information.
Encrypt.badDataArgs = The %s flag should be followed by an argument containing the text you wish to encrypt.
Encrypt.usage = Usage:\tmend %1$s [%2$s] [%3$s <text>|<path to file> [<encrypted file name>]]\n\
\n\
Encrypts text to your current log, or encrypts a file and prints an id for it. Without any arguments this command will open a text editor to allow you to write your log entry. In the editor press Shift+Enter to commit your log and close the editor, or Ctrl+Enter to submit your log and clear the editor.\n\
\n\
\t%2$s : Append to the current log without adding a date/time header.\n\
\t%3$s : Encrypts the following text argument without opening a text editor.
Encrypt.description = To encrypt text to your current log, or encrypt a file and receive an id for it.

Decrypt.noFile = Please provide the file to decrypt.
Decrypt.usage = Usage:\tmend %1$s [%2$s] <log_file_name>|<enc_file>\n\
\n\
Decrypts an encrypted log or enc file. You can pass an absolute path or simply the name of the log or enc file within your log/enc directory.\n\
\n\
\t%2$s : When decrypting an enc file it will be opened automatically. Use this flag to silence this behaviour. The file will be available in your decrypt directory.
Decrypt.description = To decrypt an encrypted log or other mend encrypted file.
Decrypt.mendLocked = MEND is currently locked. Please run mend %s before attempting to decrypt files.

Encrypt.threadInterrupt = Input listener was interrupted. Your log may have failed.

EncryptFromStdIn.usage = Usage:\tmend %1$s [%2$s]\n\
\n\
Encrypts from stdin to your current log.\n\
\n\
\t%2$s : Append to the current log without adding a date/time header.
EncryptFromStdIn.description = To encrypt text to your current log from stdin.

Help.commands = Commands: 
Help.description = See a list of available commands
Help.usage = Usage:\tmend [%1$s | %2$s] | [<command> [%3$s|<args>]]

SetProperty.notRecognised = %s is not a recognised property name.
SetProperty.successful = Successfully set %s to %s
SetProperty.usage = Usage:\tmend %s <property name> <value>\n\
\n\
Recognized properties: \n\
\n\
%s
SetProperty.description = Set the value of a property in your settings file.

General.invalidArgNum = Invalid number of arguments. See "mend %s -h" for more information.
General.unknownIdentifier = MEND could not identify the file with name %s or did not recognise the file extension
General.fileAlreadyExists = The file identified already exists at %s 
General.couldNotFindOrWriteDir = Could not find or write to the directory %s
General.propertyNotSet = Please set the %s property before using the %s command
General.currentLogNotSet = Please set the %s property
General.dirNotFound = Could not find the directory: %s

Merge.usage = Usage:\tmend %1$s [%2$s | %3$s] <first log> <second log> [<output log>]\n\
\n\
Merges two log files into one log file. Logs in the output will be sorted by the date/time in their header. Each log in the two input files must have a unique date/time header, duplicates will be filtered out.\n\
\n\
If an output log is specified the merged log will be written to that file, otherwise you must provide one of the flags:\n\
\n\
\t%2$s : The first log will be overwritten with the merged log.\n\
\t%3$s : The second log will be overwritten with the merged log.
Merge.description = Merges all the logs from two different log files into one log file, sorted by date.
Merge.mendLocked = You can not merge log files while MEND is locked. Please run mend %s

MergeHelper.mergeComplete = Merged to file: %s
MergeHelper.movedFile = Moved:  %s  to  %s


StatePrinter.settingNotFound = Could not find setting: %s
StatePrinter.notFound = NOT SET
StatePrinter.usage = Usage:\tmend %1$s [%2$s | %3$s | %4$s] | <property>\n\
\n\
%2$s\tPrint all properties from your Setting file.\n\
%3$s\tPrint the names of log files.\n\
%4$s\tPrint the names of enc files.\n\
\n\
Recognized properties: \n\
\n\
%5$s
StatePrinter.description = Get the values of properties in your settings file.
StatePrinter.Error = Error retrieving value

SetupMend.alreadySetup = MEND already has a config.xml file at: %s \
Please use the %s flag to overwrite it.
SetupMend.enterPassword = Please enter a password: 
SetupMend.reEnterPassword = Please re-enter your password: 
SetupMend.passwordMismatch = Your passwords did not match. Please try again.
SetupMend.creating = Creating MEND settings directory %s
SetupMend.complete = MEND Successfully set up.
SetupMend.usage = Usage:\tmend %1$s [%2$s]\n\
\n\
\t%2$s: Forces setup to run even if MEND is already set up.
SetupMend.description = Run this command first to setup MEND.
SetupMend.invalidNumber = Please only use the digits 0-9:
SetupMend.cipherHint = It is recommended to use the defaults for these settings but you may use any asymmetric cipher provided by your JCA.
SetupMend.asymmetricCipherName = What asymmetric cipher would you like to use? (Default %s):
SetupMend.asymmetricCipherTransform = What asymmetric cipher transform would you like to use? (Default %s):
SetupMend.asymmetricKeySize = What asymmetric key size would you like to use? (Default %s):
SetupMend.argon2Hint = MEND uses Argon2id version 13 to derive a key from your password. You can tune the following parameters to tradeoff unlock speed for security.
SetupMend.pwKeyFactoryIterations = How many iterations would you like to use for the password key factory? (Default %s):
SetupMend.pwKeyFactoryParallelism = How many threads would you like to use for the password key factory? (Default %s):
SetupMend.pwKeyFactoryMemory = How much memory in KB would you like to use for the password key factory? It must be at least double the parallelism (Default %s):
SetupMend.storingKeys = Generating and storing keys...
SetupMend.yourLogDirIs = Your log directory is: %s \n\
You can change this by running mend set %s /path/to/log/dir
SetupMend.yourEncDirIs = Your enc directory is: %s \n\
You can change this by running mend set %s /path/to/enc/dir
SetupMend.yourDecDirIs = Your dec directory is: %s \n\
You can change this by running mend set %s /path/to/dec/dir
SetupMend.yourShredCommandIs = Your shred command is: %s \n\
You should consider changing this to something more secure like "shred -u <filename>"
SetupMend.yourCurrentLogIs = Your current log is: %s \n\
You can change this by running mend set %s <log_file_name> \n\
or simply mend scl <log_file_name>

Unlock.enterPassword = Please enter your password:
Unlock.incorrectPassword = Incorrect password
Unlock.unlocking = Unlocking...
Unlock.unlocked = MEND Unlocked.
Unlock.usage = Usage:\tmend %s\n\
\n\
Requests your password and decrypts your private key. You must do this before you can decrypt any files or logs.
Unlock.description = To decrypt the private key.

Version.desktopVersion = Desktop Version : %s
Version.usage = Usage:\tmend [%s]
Version.description = Print the current version of MEND.

Settings.settingNotFound = Could not find setting: %s

Settings.descriptions.public-key = The public key used for encryption encoded in url safe base64.
Settings.descriptions.encrypted-private-key = The private key used to decrypt encoded in url safe base64, and encrypted with AES-256 using the Argon2id hash of your password.
Settings.descriptions.current-log = The currently active log file that 'mend enc' will append to.
Settings.descriptions.log-dir = The directory where mend expects all your log files to exist by default.
Settings.descriptions.enc-dir = The directory where mend will store encrypted files.
Settings.descriptions.dec-dir = The directory where mend will temporarily store decrypted files.
Settings.descriptions.shred-command = The command that will be run to shred a file, where <filename> is the file to be shredded.
Settings.descriptions.asymmetric-cipher-name = The name of the asymmetric cipher used e.g. RSA or EC.
Settings.descriptions.asymmetric-cipher-transform = The transform of the asymmetric cipher used e.g. RSA/ECB/PKCS1Padding or ECIES.
Settings.descriptions.asymmetric-key-size = The size of the asymmetric key used e.g. 4096 or 521.
Settings.descriptions.pw-key-factory-iterations = The number of iterations used by Argon2id to derive a key from your password.
Settings.descriptions.pw-key-factory-parallelism = The number of threads used by Argon2id to derive a key from your password.
Settings.descriptions.pw-key-factory-salt = The salt used by Argon2 to derive a key from your password (encoded in url safe base64).
Settings.descriptions.pw-key-factory-memory-kb = The amount of memory in KB used by Argon2id to derive a key from your password.
Settings.descriptions.pw-private-key-cipher-iv = The IV used to encrypt your private key with AES.


CryptoHelper.encryptingFile = Encrypting file to: %s
CryptoHelper.encryptFileComplete = Encryption complete. Key: %s
CryptoHelper.decryptingFile = Decrypting the file to: %s
CryptoHelper.decryptComplete = Decryption complete.
CryptoHelper.successfullyLogged = Successfully Logged entry at: %s

Platform.header = DESKTOP

